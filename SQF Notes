#### Datatypes
Integer
Number
String
Objekt - ObjektID
Handle - Script
Boolean

private var -> private [_var];
global  var -> var;
local   var -> _var;

//
/**/

#### Ops
+
-
*
/
%
mod
^
!

==
!=
>
<
>=
<=

+=
-=

&&
||
xor (a||b) && !(a&&b)
nor !(a||b)
nand !(a&&b)

call compile preprocessFile "=extFolder\=initOrWhatever.sqf";

init.sqf -> Executed when mission is started (before briefing screen) 
initServer.sqf -> Executed only on server when mission is started. See initialization order for details about when the script is exactly executed.
player ist ein Objekt und repr√§sentiert den Wert des jeweiligen Computers.

------------------------------------------------------------

Land_Cargo_HQ_V1_F 	- Military Cargo HQ Green
Land_CampingChair_V2_F	- Camping Chair

------------------------------------------------------------
OBJEKT ERZEUGEN
INIT: null = "Land_Cargo_HQ_V1_F" createVehicle position this; deleteVehicle this;

ADD ACTION
INIT: this addAction ["Hi", {hint "test"} ];
OR: INIT: this addAction ["Hi", "test.sqf" ];
OR: INIT: this addAction ["Hi", {player addAction ["hello", { hint "new line" } ] } ]; // Player, who is it and who is affected by this?



DEBUGGING
_vari = 5;_var = 4; hint format["Something: %1", _vari,_var];
%POS OF ARGS

Debug DebugEquip
_obj = _this select 0; //the object that had the action
_caller = _this select 1; //unit that called the action
_id = _this select 2; //id of the action

_outp = "HEADGEAR  =  " + (headgear _caller)
	+ "\n\nGOGGLES  =  " + (goggles _caller)
	+ "\n\nPRIM. WEAPON  =  " + (primaryWeapon _caller) + "  =  " + (str primaryWeaponItems _caller)
	+ "\n\nSEC. WEAPON  =  " + (secondaryWeapon _caller) + "  =  " + (str secondaryWeaponItems _caller)
	+ "\n\nHANDGUN  =  " + (handgunWeapon _caller) + "  =  " + (str handgunItems _caller)
	+ "\n\nASSIGNED ITEMS  =  " + (str assignedItems _caller)
	+ "\n\nUNIFORM  =  " + (uniform _caller) + "  =  " + (str uniformItems _caller)
	+ "\n\nVEST  =  " + (vest _caller) + "  =  " + (str vestItems _caller)
	+ "\n\nBACKPACK  =  " + (backpack _caller) + "  =  " + (str backpackItems _caller);
	//+ "\n\nALL WEAPONS  =  " + (str weapons _caller)
	//+ "\n\nALL MAGAZINES  =  " + (str magazines _caller);

titleText [_outp, "BLACK IN", 30]; //print our info
